{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "${workspaceFolder}/Emotify.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "publish",
            "command": "dotnet",
            "type": "process",
            "args": [
                "publish",
                "${workspaceFolder}/Emotify.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "watch",
            "command": "dotnet",
            "type": "process",
            "args": [
                "watch",
                "run",
                "${workspaceFolder}/Emotify.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "type": "npm",
            "script": "all",
            "problemMatcher": [
                "$node-sass"
            ],
            "label": "npm: all",
            "detail": "npm run build && npm run build-minify"
        },
        {
            "label": "db wipe",
            "type": "shell",
            "command": "rm -Recurse ./Migrations/; rm app.db;",
            "problemMatcher": [
                "$msCompile"
            ]
        },
        {
            "label": "db upgrade",
            "type": "shell",
            "command": "dotnet ef migrations add ${input:migrationName}; dotnet ef database update",
            "problemMatcher": [
                "$msCompile"
            ]
        },
        {
            "label": "db reset",
            "type": "shell",
            "command": "Write-Host done",
            "dependsOn": [
                "db wipe",
                "db upgrade"
            ],
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "migrationName",
            "description":"Name of the migration to be created",
            "type": "promptString"
        }
    ]
}