// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Emotify.Migrations
{
    [DbContext(typeof(EmotifyDbContext))]
    partial class EmotifyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Emotify.Models.Emote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmoteImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("OwnerUserId")
                        .HasMaxLength(128)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmoteImageId");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Emotes");
                });

            modelBuilder.Entity("Emotify.Models.EmoteImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .HasColumnType("BLOB");

                    b.Property<string>("FileType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmoteImages");
                });

            modelBuilder.Entity("Emotify.Models.EnrolledGuild", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("OwnerUserId")
                        .HasMaxLength(128)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("EnrolledGuilds");
                });

            modelBuilder.Entity("Emotify.Models.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Discriminator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Emotify.Models.Emote", b =>
                {
                    b.HasOne("Emotify.Models.EmoteImage", "EmoteImage")
                        .WithMany()
                        .HasForeignKey("EmoteImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emotify.Models.User", "Owner")
                        .WithMany("Emotes")
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmoteImage");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Emotify.Models.EnrolledGuild", b =>
                {
                    b.HasOne("Emotify.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Emotify.Models.User", b =>
                {
                    b.Navigation("Emotes");
                });
#pragma warning restore 612, 618
        }
    }
}
